"use strict";
/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var _BaseJsonValidator_instances, _BaseJsonValidator_getSchemaFilePath, _BaseJsonValidator_validatorCache, _BaseJsonValidator_getValidator;
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonStrictValidator = exports.JsonValidator = void 0;
const errors_1 = require("../_optPlug.node/errors");
const jsonValidator_1 = require("../_optPlug.node/jsonValidator");
const resources_node_1 = require("../resources.node");
const baseValidator_1 = require("./baseValidator");
const errors_2 = require("./errors");
class BaseJsonValidator extends baseValidator_1.BaseValidator {
    constructor() {
        super(...arguments);
        _BaseJsonValidator_instances.add(this);
        _BaseJsonValidator_validatorCache.set(this, undefined);
    }
    async validate(data) {
        return (await __classPrivateFieldGet(this, _BaseJsonValidator_instances, "m", _BaseJsonValidator_getValidator).call(this))(data);
    }
}
_BaseJsonValidator_validatorCache = new WeakMap(), _BaseJsonValidator_instances = new WeakSet(), _BaseJsonValidator_getSchemaFilePath = function _BaseJsonValidator_getSchemaFilePath() {
    const s = this._getSchemaFile();
    if (s === undefined) {
        throw new errors_2.NotImplementedError(this.version);
    }
    return s;
}, _BaseJsonValidator_getValidator = async function _BaseJsonValidator_getValidator() {
    if (__classPrivateFieldGet(this, _BaseJsonValidator_validatorCache, "f") === undefined) {
        try {
            __classPrivateFieldSet(this, _BaseJsonValidator_validatorCache, await (0, jsonValidator_1.default)(__classPrivateFieldGet(this, _BaseJsonValidator_instances, "m", _BaseJsonValidator_getSchemaFilePath).call(this), {
                'http://cyclonedx.org/schema/spdx.SNAPSHOT.schema.json': resources_node_1.FILES.SPDX.JSON_SCHEMA,
                'http://cyclonedx.org/schema/jsf-0.82.SNAPSHOT.schema.json': resources_node_1.FILES.JSF.JSON_SCHEMA
            }), "f");
        }
        catch (err) {
            if (err instanceof errors_1.OptPlugError) {
                throw new errors_2.MissingOptionalDependencyError(err.message, err);
            }
            throw err;
        }
    }
    return __classPrivateFieldGet(this, _BaseJsonValidator_validatorCache, "f");
};
class JsonValidator extends BaseJsonValidator {
    _getSchemaFile() {
        return resources_node_1.FILES.CDX.JSON_SCHEMA[this.version];
    }
}
exports.JsonValidator = JsonValidator;
class JsonStrictValidator extends BaseJsonValidator {
    _getSchemaFile() {
        return resources_node_1.FILES.CDX.JSON_STRICT_SCHEMA[this.version];
    }
}
exports.JsonStrictValidator = JsonStrictValidator;
//# sourceMappingURL=jsonValidator.node.js.map